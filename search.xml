<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hexo+GitHub同步托管到coding上的方法]]></title>
      <url>http://yoursite.com/2016/08/14/Hexo+GitHub%E5%90%8C%E6%AD%A5%E6%89%98%E7%AE%A1%E5%88%B0coding%E4%B8%8A%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前我们已经将hexo托管到GitHub上去了，但是毕竟是国外的。访问速度很慢，因此，我就想也部署到国内的托管平台。其中，coding是很好的一个选择。看过很多人写的博客，自己就总结一下部署的方法，该方法可以在本地一次更新后，同时更新到GitHub和coding上，话不多说看干货。<br><a id="more"></a></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h3 id="注册、登录CODING账号。这画风我喜欢-。"><a href="#注册、登录CODING账号。这画风我喜欢-。" class="headerlink" title="注册、登录CODING账号。这画风我喜欢^_^。"></a>注册、登录CODING账号。这画风我喜欢^_^。</h3><h3 id="新建一个项目"><a href="#新建一个项目" class="headerlink" title="新建一个项目"></a>新建一个项目</h3><p>点击完“添加项目”完之后，填写项目名称和项目描述，完成之后点击“创建项目”。</p>
<h3 id="SSH公钥配置"><a href="#SSH公钥配置" class="headerlink" title="SSH公钥配置"></a>SSH公钥配置</h3><p>这里的公钥就是之前配置到GitHub里面的公钥，我们直接将.ssh文件夹中的id_rsa.pub文件中数据全选，复制就好。然后coding页面中，点击“账户—&gt;SSH公钥”，粘贴刚刚复制的公钥，然后点击“添加”即可。</p>
<h3 id="config-yml配置"><a href="#config-yml配置" class="headerlink" title="_config.yml配置"></a>_config.yml配置</h3><p>想要同时部署到两个平台，就要修改博客根目录E:\Hexo下面的_config.yml文件内容，我们只需要修改deploy下面的内容就好了，将原来的内容修改为一下形式：</p>
<p>关于coding：后面的访问地址，我们只需要选中刚才所创建的项目，然后点击“代码”，在页面的左下方选中“SSH”，然后直接复制该地址就行了。</p>
<p>添加完之后，在git bash命令窗口输入以下指令：</p>
<p><code>ssh -T git@git.coding.net</code></p>
<p>提示输入（yes/no）？，输入yes，完工。</p>
<h3 id="同步本地Hexo到coding上"><a href="#同步本地Hexo到coding上" class="headerlink" title="同步本地Hexo到coding上"></a>同步本地Hexo到coding上</h3><p>It’s easy! 一条指令的干活。</p>
<p><code>hexo depoly -g</code></p>
<p>红色框框的内容便是我们同步到coding上的内容了。<br>怎么还没到啊，宝宝等不及啦！心急吃不了热馍馍。最后一步！！！</p>
<h3 id="pages服务方式部署"><a href="#pages服务方式部署" class="headerlink" title="pages服务方式部署"></a>pages服务方式部署</h3><p>部署博客这里我们采用pages服务的方式，因为可以绑定域名。（虽然我还没有域名-_-!）pages方式也很简单，就是在source文件夹下创建一个空白文件，因为coding.net需要这个文件夹作为以静态文件部署的标志。看到这个Staticfile就知道按照静态文件来发布。具体操作看下面指令：</p>
<p><code>cd source</code><br><code>touch Staticfile  #名字必须是Staticfile</code></p>
<p>在本项目中，选中“代码–&gt;Pages服务”，在部署分支中填写master，因为在配置文件中我们写的master，然后点击“立即开启”，收工！</p>
<p>接下里你就可以访问自己的博客了。访问地址为<code>xxx.coding.me</code>。<br> 注意：如果你的项目名称跟你的coding的用户名一致时，例如：我的coding用户名为iechoes，同时，我的博客项目名称也是iechoes。那么直接访问<code>iechoes.coding.me</code>就可以访问博客了。否则就需要带上项目名称名才能访问，即：<code>iechoes.coding.me/项目名称</code><br>推荐第一种方式哦，这样可以偷懒。嘻嘻。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello, world!]]></title>
      <url>http://yoursite.com/2016/08/14/happy/</url>
      <content type="html"><![CDATA[<p>人生中的第一篇博客，花了半天的时间将博客搭建好。第一篇博文想不到取什么名字好，就想直接用编程世界中最经典的句子来命名：hello world。你好，博客新世界。一直以来想创建自己的个人博客，始终因为这因为那搁置不前。今天心一横，参考网上各种教程，顺利完成大家，同时自己也顺手写下了自己搭建的过程，后面也会分享给大家。在此感谢教程编写者们的奉献。<br>以此博文，记录成长。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=32507038&auto=1&height=66"></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/08/14/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
